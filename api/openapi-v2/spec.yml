swagger: "2.0"
info:
  license:
    name: MIT
  title: Mancala API
  version: 1.0.0
host: mancala.herokuapp.com
basePath: /v1/
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /games:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: A JSON object containing information to create a new game
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/NewGameBody"
      responses:
        201:
          description: Game response
          examples:
            application/json:
              board_side1:
                pits:
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                player:
                  name: Player1
                  score: 0
                store: 0
              board_side2:
                pits:
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                player:
                  name: Player2
                  score: 0
                store: 0
              id: 37d5b35c-f90e-4136-90f8-500d6c43b1bf
              result: 3
              turn: 0
          schema:
            $ref: "#/definitions/Game"
        400:
          $ref: "#/responses/BadRequestResponse"
        404:
          $ref: "#/responses/NotFoundResponse"
        500:
          $ref: "#/responses/InternalServerErrorResponse"
      tags:
        - Games
      operationId: CreateGame
      summary: Create game

  /games/{id}:
    parameters:
      - format: uuid
        in: path
        name: id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: Game response
          examples:
            application/json:
              board_side1:
                pits:
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                player:
                  name: Player1
                  score: 0
                store: 0
              board_side2:
                pits:
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                player:
                  name: Player2
                  score: 0
                store: 0
              id: 37d5b35c-f90e-4136-90f8-500d6c43b1bf
              result: 3
              turn: 0
          schema:
            $ref: "#/definitions/Game"
        404:
          $ref: "#/responses/NotFoundResponse"
        500:
          $ref: "#/responses/InternalServerErrorResponse"
      tags:
        - Games
      description: Retrieves a game
      operationId: ShowGame
      summary: Show game
    patch:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: A JSON object containing information to update a game
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/GameUpdateBody"
      responses:
        200:
          description: Game response
          examples:
            application/json:
              board_side1:
                pits:
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                player:
                  name: Player1
                  score: 0
                store: 0
              board_side2:
                pits:
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                  - 6
                player:
                  name: Player2
                  score: 0
                store: 0
              id: 37d5b35c-f90e-4136-90f8-500d6c43b1bf
              result: 3
              turn: 0
          schema:
            $ref: "#/definitions/Game"
        400:
          $ref: "#/responses/BadRequestResponse"
        404:
          $ref: "#/responses/NotFoundResponse"
        500:
          $ref: "#/responses/InternalServerErrorResponse"
      tags:
        - Games
      description: Updates a game by playing the corresponding next turn
      operationId: updateGame
      summary: Update game

definitions:
  ArrayOfViolations:
    items:
      $ref: "#/definitions/Violation"
    type: array
  BoardSide:
    description: A side of the board
    properties:
      pits:
        description: The pits of the board side
        items:
          format: int64
          minimum: 0
          type: integer
        maxItems: 6
        type: array
      player:
        allOf:
          - description: The player assigned to the board side
          - $ref: "#/definitions/Player"
      store:
        description: The store (big pit) of the board side
        type: integer
    type: object
  Game:
    properties:
      board_side1:
        allOf:
          - description: The upper side of the game board
          - $ref: "#/definitions/BoardSide"
      board_side2:
        allOf:
          - description: The lower side of the game board
          - $ref: "#/definitions/BoardSide"
      id:
        description: The id of the game
        type: string
      result:
        $ref: "#/definitions/Result"
      turn:
        $ref: "#/definitions/Turn"
    type: object
  Player:
    properties:
      name:
        description: The name of the player
        type: string
      score:
        description: The score of the player
        format: int64
        type: integer
    type: object
  Problem:
    properties:
      detail:
        type: string
      status:
        format: int64
        type: integer
        x-nullable: false
      title:
        type: string
        x-nullable: false
      type:
        type: string
        x-nullable: false
      violations:
        $ref: "#/definitions/ArrayOfViolations"
    required:
      - type
      - title
      - status
      - detail
    type: object
  Result:
    description: The result of the game. `0` = `Undefined`, `1` = `Player1Wins`, `2` = `Player2Wins`, `3` = `Tie`.
    type: integer
    enum:
      - 0
      - 1
      - 2
      - 3
    x-go-const-names:
      - Undefined
      - Player1Wins
      - Player2Wins
      - Tie
  Turn:
    description: "The turn that needs to play next. `0` = `Player1`, `1` = `Player2`."
    type: integer
    enum:
      - 0
      - 1
    x-go-const-names:
      - Player1
      - Player2
  Violation:
    properties:
      name:
        type: string
      reason:
        type: string
    required:
      - name
      - reason
    type: object
  GameUpdateBody:
    title: GameUpdateBody
    type: object
    properties:
      pit_index:
        type: integer
        minimum: 0
        maximum: 5
        format: int64
    required:
      - pit_index
  NewGameBody:
    title: NewGameBody
    type: object
    properties:
      player1:
        type: string
        x-nullable: false
      player2:
        type: string
        x-nullable: false
    required:
      - player1
      - player2

responses:
  BadRequestResponse:
    description: Bad request
    schema:
      $ref: "#/definitions/Problem"
  NotFoundResponse:
    description: Resource not found
    schema:
      $ref: "#/definitions/Problem"
  InternalServerErrorResponse:
    description: Internal server error
    schema:
      $ref: "#/definitions/Problem"
